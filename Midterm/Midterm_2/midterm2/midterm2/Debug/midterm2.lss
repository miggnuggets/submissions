
midterm2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f4  00800100  00000b84  00000c18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b84  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001f4  008001f4  00000d0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d0c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000da8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001345  00000000  00000000  00000e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a6  00000000  00000000  00002195  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000770  00000000  00000000  00002b3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  000032ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000534  00000000  00000000  000034bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a51  00000000  00000000  000039f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00004441  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e8       	ldi	r30, 0x84	; 132
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 3f       	cpi	r26, 0xF4	; 244
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 ef       	ldi	r26, 0xF4	; 244
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 3f       	cpi	r26, 0xFA	; 250
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 20 02 	call	0x440	; 0x440 <main>
  9e:	0c 94 c0 05 	jmp	0xb80	; 0xb80 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <i2c_init>:
  a6:	88 e4       	ldi	r24, 0x48	; 72
  a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
  ac:	08 95       	ret

000000ae <i2c_start>:
  ae:	ec eb       	ldi	r30, 0xBC	; 188
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	10 82       	st	Z, r1
  b4:	94 ea       	ldi	r25, 0xA4	; 164
  b6:	90 83       	st	Z, r25
  b8:	90 81       	ld	r25, Z
  ba:	99 23       	and	r25, r25
  bc:	ec f7       	brge	.-6      	; 0xb8 <i2c_start+0xa>
  be:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  c2:	98 7f       	andi	r25, 0xF8	; 248
  c4:	98 30       	cpi	r25, 0x08	; 8
  c6:	a1 f4       	brne	.+40     	; 0xf0 <i2c_start+0x42>
  c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  cc:	84 e8       	ldi	r24, 0x84	; 132
  ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  d2:	ec eb       	ldi	r30, 0xBC	; 188
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	88 23       	and	r24, r24
  da:	ec f7       	brge	.-6      	; 0xd6 <i2c_start+0x28>
  dc:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  e0:	98 7f       	andi	r25, 0xF8	; 248
  e2:	98 31       	cpi	r25, 0x18	; 24
  e4:	39 f0       	breq	.+14     	; 0xf4 <i2c_start+0x46>
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	90 34       	cpi	r25, 0x40	; 64
  ea:	29 f4       	brne	.+10     	; 0xf6 <i2c_start+0x48>
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	08 95       	ret
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	08 95       	ret
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	08 95       	ret

000000f8 <i2c_write>:
  f8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  fc:	84 e8       	ldi	r24, 0x84	; 132
  fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 102:	ec eb       	ldi	r30, 0xBC	; 188
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	88 23       	and	r24, r24
 10a:	ec f7       	brge	.-6      	; 0x106 <i2c_write+0xe>
 10c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 110:	98 7f       	andi	r25, 0xF8	; 248
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	98 32       	cpi	r25, 0x28	; 40
 116:	09 f4       	brne	.+2      	; 0x11a <i2c_write+0x22>
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	08 95       	ret

0000011c <i2c_read_ack>:
 11c:	84 ec       	ldi	r24, 0xC4	; 196
 11e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 122:	ec eb       	ldi	r30, 0xBC	; 188
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	88 23       	and	r24, r24
 12a:	ec f7       	brge	.-6      	; 0x126 <i2c_read_ack+0xa>
 12c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 130:	08 95       	ret

00000132 <i2c_read_nack>:
 132:	84 e8       	ldi	r24, 0x84	; 132
 134:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 138:	ec eb       	ldi	r30, 0xBC	; 188
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	88 23       	and	r24, r24
 140:	ec f7       	brge	.-6      	; 0x13c <i2c_read_nack+0xa>
 142:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 146:	08 95       	ret

00000148 <i2c_writeReg>:
 148:	cf 92       	push	r12
 14a:	df 92       	push	r13
 14c:	ff 92       	push	r15
 14e:	0f 93       	push	r16
 150:	1f 93       	push	r17
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	c6 2f       	mov	r28, r22
 158:	6a 01       	movw	r12, r20
 15a:	89 01       	movw	r16, r18
 15c:	0e 94 57 00 	call	0xae	; 0xae <i2c_start>
 160:	f8 2e       	mov	r15, r24
 162:	81 11       	cpse	r24, r1
 164:	15 c0       	rjmp	.+42     	; 0x190 <i2c_writeReg+0x48>
 166:	8c 2f       	mov	r24, r28
 168:	0e 94 7c 00 	call	0xf8	; 0xf8 <i2c_write>
 16c:	01 15       	cp	r16, r1
 16e:	11 05       	cpc	r17, r1
 170:	59 f0       	breq	.+22     	; 0x188 <i2c_writeReg+0x40>
 172:	e6 01       	movw	r28, r12
 174:	0c 0d       	add	r16, r12
 176:	1d 1d       	adc	r17, r13
 178:	89 91       	ld	r24, Y+
 17a:	0e 94 7c 00 	call	0xf8	; 0xf8 <i2c_write>
 17e:	81 11       	cpse	r24, r1
 180:	0a c0       	rjmp	.+20     	; 0x196 <i2c_writeReg+0x4e>
 182:	c0 17       	cp	r28, r16
 184:	d1 07       	cpc	r29, r17
 186:	c1 f7       	brne	.-16     	; 0x178 <i2c_writeReg+0x30>
 188:	84 e9       	ldi	r24, 0x94	; 148
 18a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 18e:	05 c0       	rjmp	.+10     	; 0x19a <i2c_writeReg+0x52>
 190:	ff 24       	eor	r15, r15
 192:	f3 94       	inc	r15
 194:	02 c0       	rjmp	.+4      	; 0x19a <i2c_writeReg+0x52>
 196:	ff 24       	eor	r15, r15
 198:	f3 94       	inc	r15
 19a:	8f 2d       	mov	r24, r15
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	0f 91       	pop	r16
 1a4:	ff 90       	pop	r15
 1a6:	df 90       	pop	r13
 1a8:	cf 90       	pop	r12
 1aa:	08 95       	ret

000001ac <i2c_readReg>:
 1ac:	af 92       	push	r10
 1ae:	bf 92       	push	r11
 1b0:	df 92       	push	r13
 1b2:	ef 92       	push	r14
 1b4:	ff 92       	push	r15
 1b6:	0f 93       	push	r16
 1b8:	1f 93       	push	r17
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	18 2f       	mov	r17, r24
 1c0:	06 2f       	mov	r16, r22
 1c2:	5a 01       	movw	r10, r20
 1c4:	e9 01       	movw	r28, r18
 1c6:	0e 94 57 00 	call	0xae	; 0xae <i2c_start>
 1ca:	81 11       	cpse	r24, r1
 1cc:	22 c0       	rjmp	.+68     	; 0x212 <i2c_readReg+0x66>
 1ce:	80 2f       	mov	r24, r16
 1d0:	0e 94 7c 00 	call	0xf8	; 0xf8 <i2c_write>
 1d4:	81 2f       	mov	r24, r17
 1d6:	81 60       	ori	r24, 0x01	; 1
 1d8:	0e 94 57 00 	call	0xae	; 0xae <i2c_start>
 1dc:	d8 2e       	mov	r13, r24
 1de:	81 11       	cpse	r24, r1
 1e0:	1b c0       	rjmp	.+54     	; 0x218 <i2c_readReg+0x6c>
 1e2:	8e 01       	movw	r16, r28
 1e4:	01 50       	subi	r16, 0x01	; 1
 1e6:	11 09       	sbc	r17, r1
 1e8:	51 f0       	breq	.+20     	; 0x1fe <i2c_readReg+0x52>
 1ea:	e5 01       	movw	r28, r10
 1ec:	75 01       	movw	r14, r10
 1ee:	e0 0e       	add	r14, r16
 1f0:	f1 1e       	adc	r15, r17
 1f2:	0e 94 8e 00 	call	0x11c	; 0x11c <i2c_read_ack>
 1f6:	89 93       	st	Y+, r24
 1f8:	ec 16       	cp	r14, r28
 1fa:	fd 06       	cpc	r15, r29
 1fc:	d1 f7       	brne	.-12     	; 0x1f2 <i2c_readReg+0x46>
 1fe:	e5 01       	movw	r28, r10
 200:	c0 0f       	add	r28, r16
 202:	d1 1f       	adc	r29, r17
 204:	0e 94 99 00 	call	0x132	; 0x132 <i2c_read_nack>
 208:	88 83       	st	Y, r24
 20a:	84 e9       	ldi	r24, 0x94	; 148
 20c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 210:	05 c0       	rjmp	.+10     	; 0x21c <i2c_readReg+0x70>
 212:	dd 24       	eor	r13, r13
 214:	d3 94       	inc	r13
 216:	02 c0       	rjmp	.+4      	; 0x21c <i2c_readReg+0x70>
 218:	dd 24       	eor	r13, r13
 21a:	d3 94       	inc	r13
 21c:	8d 2d       	mov	r24, r13
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	1f 91       	pop	r17
 224:	0f 91       	pop	r16
 226:	ff 90       	pop	r15
 228:	ef 90       	pop	r14
 22a:	df 90       	pop	r13
 22c:	bf 90       	pop	r11
 22e:	af 90       	pop	r10
 230:	08 95       	ret

00000232 <uart_putchar>:
	UCSR0C = (3 <<UCSZ00);
}

int uart_putchar(char c, FILE *stream){
	//wait until buffer empty
	while ( !( UCSR0A & ( 1 <<UDRE0)) );
 232:	e0 ec       	ldi	r30, 0xC0	; 192
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	90 81       	ld	r25, Z
 238:	95 ff       	sbrs	r25, 5
 23a:	fd cf       	rjmp	.-6      	; 0x236 <uart_putchar+0x4>
	
	//Put data into buffer
	UDR0 = c;
 23c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	08 95       	ret

00000246 <apds_init>:
		printf("GET https://api.thingspeak.com/update?api_key=4GOY7N6MQ2MKJOS9&field1=%05u&field2=%05u&field3=%05u\r\n", red, green, blue);
		_delay_ms(5000);
    }
}

void apds_init(){
 246:	cf 93       	push	r28
 248:	df 93       	push	r29
 24a:	1f 92       	push	r1
 24c:	cd b7       	in	r28, 0x3d	; 61
 24e:	de b7       	in	r29, 0x3e	; 62
	uint8_t setup;
	i2c_readReg(APDS_WRITE, APDS9960_ID, &setup,1);
 250:	21 e0       	ldi	r18, 0x01	; 1
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	ae 01       	movw	r20, r28
 256:	4f 5f       	subi	r20, 0xFF	; 255
 258:	5f 4f       	sbci	r21, 0xFF	; 255
 25a:	62 e9       	ldi	r22, 0x92	; 146
 25c:	82 e7       	ldi	r24, 0x72	; 114
 25e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_readReg>
	if(setup != APDS9960_ID_1) while(1);
 262:	89 81       	ldd	r24, Y+1	; 0x01
 264:	8b 3a       	cpi	r24, 0xAB	; 171
 266:	09 f0       	breq	.+2      	; 0x26a <apds_init+0x24>
 268:	ff cf       	rjmp	.-2      	; 0x268 <apds_init+0x22>
	setup = 1 << 1 | 1<<0 | 1<<3 | 1<<4;
 26a:	8b e1       	ldi	r24, 0x1B	; 27
 26c:	89 83       	std	Y+1, r24	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_ENABLE, &setup, 1);
 26e:	21 e0       	ldi	r18, 0x01	; 1
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	ae 01       	movw	r20, r28
 274:	4f 5f       	subi	r20, 0xFF	; 255
 276:	5f 4f       	sbci	r21, 0xFF	; 255
 278:	60 e8       	ldi	r22, 0x80	; 128
 27a:	82 e7       	ldi	r24, 0x72	; 114
 27c:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_ATIME;
 280:	8b ed       	ldi	r24, 0xDB	; 219
 282:	89 83       	std	Y+1, r24	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_ATIME, &setup, 1);
 284:	21 e0       	ldi	r18, 0x01	; 1
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	ae 01       	movw	r20, r28
 28a:	4f 5f       	subi	r20, 0xFF	; 255
 28c:	5f 4f       	sbci	r21, 0xFF	; 255
 28e:	61 e8       	ldi	r22, 0x81	; 129
 290:	82 e7       	ldi	r24, 0x72	; 114
 292:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_WTIME;
 296:	86 ef       	ldi	r24, 0xF6	; 246
 298:	89 83       	std	Y+1, r24	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_WTIME, &setup, 1);
 29a:	21 e0       	ldi	r18, 0x01	; 1
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	ae 01       	movw	r20, r28
 2a0:	4f 5f       	subi	r20, 0xFF	; 255
 2a2:	5f 4f       	sbci	r21, 0xFF	; 255
 2a4:	63 e8       	ldi	r22, 0x83	; 131
 2a6:	82 e7       	ldi	r24, 0x72	; 114
 2a8:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_PROX_PPULSE;
 2ac:	87 e8       	ldi	r24, 0x87	; 135
 2ae:	89 83       	std	Y+1, r24	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_PPULSE, &setup, 1);
 2b0:	21 e0       	ldi	r18, 0x01	; 1
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	ae 01       	movw	r20, r28
 2b6:	4f 5f       	subi	r20, 0xFF	; 255
 2b8:	5f 4f       	sbci	r21, 0xFF	; 255
 2ba:	6e e8       	ldi	r22, 0x8E	; 142
 2bc:	82 e7       	ldi	r24, 0x72	; 114
 2be:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_POFFSET_UR;
 2c2:	19 82       	std	Y+1, r1	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_POFFSET_UR, &setup, 1);
 2c4:	21 e0       	ldi	r18, 0x01	; 1
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	ae 01       	movw	r20, r28
 2ca:	4f 5f       	subi	r20, 0xFF	; 255
 2cc:	5f 4f       	sbci	r21, 0xFF	; 255
 2ce:	6d e9       	ldi	r22, 0x9D	; 157
 2d0:	82 e7       	ldi	r24, 0x72	; 114
 2d2:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_POFFSET_DL;
 2d6:	19 82       	std	Y+1, r1	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_POFFSET_DL, &setup, 1);
 2d8:	21 e0       	ldi	r18, 0x01	; 1
 2da:	30 e0       	ldi	r19, 0x00	; 0
 2dc:	ae 01       	movw	r20, r28
 2de:	4f 5f       	subi	r20, 0xFF	; 255
 2e0:	5f 4f       	sbci	r21, 0xFF	; 255
 2e2:	6e e9       	ldi	r22, 0x9E	; 158
 2e4:	82 e7       	ldi	r24, 0x72	; 114
 2e6:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_CONFIG1;
 2ea:	80 e6       	ldi	r24, 0x60	; 96
 2ec:	89 83       	std	Y+1, r24	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_CONFIG1, &setup, 1);
 2ee:	21 e0       	ldi	r18, 0x01	; 1
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	ae 01       	movw	r20, r28
 2f4:	4f 5f       	subi	r20, 0xFF	; 255
 2f6:	5f 4f       	sbci	r21, 0xFF	; 255
 2f8:	6d e8       	ldi	r22, 0x8D	; 141
 2fa:	82 e7       	ldi	r24, 0x72	; 114
 2fc:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_PERS;
 300:	81 e1       	ldi	r24, 0x11	; 17
 302:	89 83       	std	Y+1, r24	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_PERS, &setup, 1);
 304:	21 e0       	ldi	r18, 0x01	; 1
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	ae 01       	movw	r20, r28
 30a:	4f 5f       	subi	r20, 0xFF	; 255
 30c:	5f 4f       	sbci	r21, 0xFF	; 255
 30e:	6c e8       	ldi	r22, 0x8C	; 140
 310:	82 e7       	ldi	r24, 0x72	; 114
 312:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_CONFIG2;
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	89 83       	std	Y+1, r24	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_CONFIG2, &setup, 1);
 31a:	21 e0       	ldi	r18, 0x01	; 1
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	ae 01       	movw	r20, r28
 320:	4f 5f       	subi	r20, 0xFF	; 255
 322:	5f 4f       	sbci	r21, 0xFF	; 255
 324:	60 e9       	ldi	r22, 0x90	; 144
 326:	82 e7       	ldi	r24, 0x72	; 114
 328:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
	setup = DEFAULT_CONFIG3;
 32c:	19 82       	std	Y+1, r1	; 0x01
	i2c_writeReg(APDS_WRITE, APDS9960_CONFIG3, &setup, 1);
 32e:	21 e0       	ldi	r18, 0x01	; 1
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	ae 01       	movw	r20, r28
 334:	4f 5f       	subi	r20, 0xFF	; 255
 336:	5f 4f       	sbci	r21, 0xFF	; 255
 338:	6f e9       	ldi	r22, 0x9F	; 159
 33a:	82 e7       	ldi	r24, 0x72	; 114
 33c:	0e 94 a4 00 	call	0x148	; 0x148 <i2c_writeReg>
}
 340:	0f 90       	pop	r0
 342:	df 91       	pop	r29
 344:	cf 91       	pop	r28
 346:	08 95       	ret

00000348 <readColor>:

void readColor(uint16_t *red, uint16_t *green, uint16_t *blue){
 348:	cf 92       	push	r12
 34a:	df 92       	push	r13
 34c:	ef 92       	push	r14
 34e:	ff 92       	push	r15
 350:	0f 93       	push	r16
 352:	1f 93       	push	r17
 354:	cf 93       	push	r28
 356:	df 93       	push	r29
 358:	00 d0       	rcall	.+0      	; 0x35a <readColor+0x12>
 35a:	00 d0       	rcall	.+0      	; 0x35c <readColor+0x14>
 35c:	00 d0       	rcall	.+0      	; 0x35e <readColor+0x16>
 35e:	cd b7       	in	r28, 0x3d	; 61
 360:	de b7       	in	r29, 0x3e	; 62
 362:	6c 01       	movw	r12, r24
 364:	7b 01       	movw	r14, r22
 366:	8a 01       	movw	r16, r20
	uint8_t redl, redh;
	uint8_t greenl, greenh;
	uint8_t bluel, blueh;
	i2c_readReg(APDS_WRITE, APDS9960_RDATAL, &redl, 1);
 368:	21 e0       	ldi	r18, 0x01	; 1
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	ae 01       	movw	r20, r28
 36e:	4f 5f       	subi	r20, 0xFF	; 255
 370:	5f 4f       	sbci	r21, 0xFF	; 255
 372:	66 e9       	ldi	r22, 0x96	; 150
 374:	82 e7       	ldi	r24, 0x72	; 114
 376:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_readReg>
	i2c_readReg(APDS_WRITE, APDS9960_RDATAH, &redh, 1);
 37a:	21 e0       	ldi	r18, 0x01	; 1
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	ae 01       	movw	r20, r28
 380:	4e 5f       	subi	r20, 0xFE	; 254
 382:	5f 4f       	sbci	r21, 0xFF	; 255
 384:	67 e9       	ldi	r22, 0x97	; 151
 386:	82 e7       	ldi	r24, 0x72	; 114
 388:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_readReg>
	i2c_readReg(APDS_WRITE, APDS9960_GDATAL, &greenl, 1);
 38c:	21 e0       	ldi	r18, 0x01	; 1
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	ae 01       	movw	r20, r28
 392:	4d 5f       	subi	r20, 0xFD	; 253
 394:	5f 4f       	sbci	r21, 0xFF	; 255
 396:	68 e9       	ldi	r22, 0x98	; 152
 398:	82 e7       	ldi	r24, 0x72	; 114
 39a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_readReg>
	i2c_readReg(APDS_WRITE, APDS9960_GDATAH, &greenh, 1);
 39e:	21 e0       	ldi	r18, 0x01	; 1
 3a0:	30 e0       	ldi	r19, 0x00	; 0
 3a2:	ae 01       	movw	r20, r28
 3a4:	4c 5f       	subi	r20, 0xFC	; 252
 3a6:	5f 4f       	sbci	r21, 0xFF	; 255
 3a8:	69 e9       	ldi	r22, 0x99	; 153
 3aa:	82 e7       	ldi	r24, 0x72	; 114
 3ac:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_readReg>
	i2c_readReg(APDS_WRITE, APDS9960_BDATAL, &bluel, 1);
 3b0:	21 e0       	ldi	r18, 0x01	; 1
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	ae 01       	movw	r20, r28
 3b6:	4b 5f       	subi	r20, 0xFB	; 251
 3b8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ba:	6a e9       	ldi	r22, 0x9A	; 154
 3bc:	82 e7       	ldi	r24, 0x72	; 114
 3be:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_readReg>
	i2c_readReg(APDS_WRITE, APDS9960_BDATAH, &blueh, 1);
 3c2:	21 e0       	ldi	r18, 0x01	; 1
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	ae 01       	movw	r20, r28
 3c8:	4a 5f       	subi	r20, 0xFA	; 250
 3ca:	5f 4f       	sbci	r21, 0xFF	; 255
 3cc:	6b e9       	ldi	r22, 0x9B	; 155
 3ce:	82 e7       	ldi	r24, 0x72	; 114
 3d0:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_readReg>
	*red = redh << 8 | redl;
 3d4:	8a 81       	ldd	r24, Y+2	; 0x02
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	98 2f       	mov	r25, r24
 3da:	88 27       	eor	r24, r24
 3dc:	29 81       	ldd	r18, Y+1	; 0x01
 3de:	82 2b       	or	r24, r18
 3e0:	f6 01       	movw	r30, r12
 3e2:	91 83       	std	Z+1, r25	; 0x01
 3e4:	80 83       	st	Z, r24
	*green = greenh << 8 | greenl;
 3e6:	8c 81       	ldd	r24, Y+4	; 0x04
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	98 2f       	mov	r25, r24
 3ec:	88 27       	eor	r24, r24
 3ee:	2b 81       	ldd	r18, Y+3	; 0x03
 3f0:	82 2b       	or	r24, r18
 3f2:	f7 01       	movw	r30, r14
 3f4:	91 83       	std	Z+1, r25	; 0x01
 3f6:	80 83       	st	Z, r24
	*blue = blueh << 8 | bluel;
 3f8:	8e 81       	ldd	r24, Y+6	; 0x06
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	98 2f       	mov	r25, r24
 3fe:	88 27       	eor	r24, r24
 400:	2d 81       	ldd	r18, Y+5	; 0x05
 402:	82 2b       	or	r24, r18
 404:	f8 01       	movw	r30, r16
 406:	91 83       	std	Z+1, r25	; 0x01
 408:	80 83       	st	Z, r24
}
 40a:	26 96       	adiw	r28, 0x06	; 6
 40c:	0f b6       	in	r0, 0x3f	; 63
 40e:	f8 94       	cli
 410:	de bf       	out	0x3e, r29	; 62
 412:	0f be       	out	0x3f, r0	; 63
 414:	cd bf       	out	0x3d, r28	; 61
 416:	df 91       	pop	r29
 418:	cf 91       	pop	r28
 41a:	1f 91       	pop	r17
 41c:	0f 91       	pop	r16
 41e:	ff 90       	pop	r15
 420:	ef 90       	pop	r14
 422:	df 90       	pop	r13
 424:	cf 90       	pop	r12
 426:	08 95       	ret

00000428 <init_UART>:

void init_UART(void){
	//Set baud rate
	uint16_t baud_rate = BRGVAL;
	UBRR0H = baud_rate >> 8;
 428:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = baud_rate & 0xFF;
 42c:	87 e6       	ldi	r24, 0x67	; 103
 42e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	//Enable receiver and transmitter
	UCSR0B = ( 1 <<RXEN0)|( 1 <<TXEN0);
 432:	88 e1       	ldi	r24, 0x18	; 24
 434:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	
	// Set frame format: 8data, 1stop bit
	UCSR0C = (3 <<UCSZ00);
 438:	86 e0       	ldi	r24, 0x06	; 6
 43a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 43e:	08 95       	ret

00000440 <main>:

void init_UART();
int uart_putchar( char c, FILE *stream);


int main(void){
 440:	cf 93       	push	r28
 442:	df 93       	push	r29
 444:	00 d0       	rcall	.+0      	; 0x446 <main+0x6>
 446:	00 d0       	rcall	.+0      	; 0x448 <main+0x8>
 448:	00 d0       	rcall	.+0      	; 0x44a <main+0xa>
 44a:	cd b7       	in	r28, 0x3d	; 61
 44c:	de b7       	in	r29, 0x3e	; 62
	uint16_t red = 0, green = 0, blue = 0;
 44e:	1a 82       	std	Y+2, r1	; 0x02
 450:	19 82       	std	Y+1, r1	; 0x01
 452:	1c 82       	std	Y+4, r1	; 0x04
 454:	1b 82       	std	Y+3, r1	; 0x03
 456:	1e 82       	std	Y+6, r1	; 0x06
 458:	1d 82       	std	Y+5, r1	; 0x05
	
	i2c_init();
 45a:	0e 94 53 00 	call	0xa6	; 0xa6 <i2c_init>
	init_UART();
 45e:	0e 94 14 02 	call	0x428	; 0x428 <init_UART>
	stdout = &str_uart;
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	91 e0       	ldi	r25, 0x01	; 1
 466:	90 93 f7 01 	sts	0x01F7, r25	; 0x8001f7 <__data_end+0x3>
 46a:	80 93 f6 01 	sts	0x01F6, r24	; 0x8001f6 <__data_end+0x2>
	apds_init();
 46e:	0e 94 23 01 	call	0x246	; 0x246 <apds_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 472:	2f ef       	ldi	r18, 0xFF	; 255
 474:	87 ea       	ldi	r24, 0xA7	; 167
 476:	91 e6       	ldi	r25, 0x61	; 97
 478:	21 50       	subi	r18, 0x01	; 1
 47a:	80 40       	sbci	r24, 0x00	; 0
 47c:	90 40       	sbci	r25, 0x00	; 0
 47e:	e1 f7       	brne	.-8      	; 0x478 <main+0x38>
 480:	00 c0       	rjmp	.+0      	; 0x482 <main+0x42>
 482:	00 00       	nop
	
 	_delay_ms(2000);
	printf("AT\r\n");
 484:	8e e0       	ldi	r24, 0x0E	; 14
 486:	91 e0       	ldi	r25, 0x01	; 1
 488:	0e 94 c8 02 	call	0x590	; 0x590 <puts>
 48c:	2f ef       	ldi	r18, 0xFF	; 255
 48e:	83 e2       	ldi	r24, 0x23	; 35
 490:	94 ef       	ldi	r25, 0xF4	; 244
 492:	21 50       	subi	r18, 0x01	; 1
 494:	80 40       	sbci	r24, 0x00	; 0
 496:	90 40       	sbci	r25, 0x00	; 0
 498:	e1 f7       	brne	.-8      	; 0x492 <main+0x52>
 49a:	00 c0       	rjmp	.+0      	; 0x49c <main+0x5c>
 49c:	00 00       	nop
	
	_delay_ms(5000);
	printf("AT+CWMODE=1\r\n"); 
 49e:	82 e1       	ldi	r24, 0x12	; 18
 4a0:	91 e0       	ldi	r25, 0x01	; 1
 4a2:	0e 94 c8 02 	call	0x590	; 0x590 <puts>
 4a6:	2f ef       	ldi	r18, 0xFF	; 255
 4a8:	83 e2       	ldi	r24, 0x23	; 35
 4aa:	94 ef       	ldi	r25, 0xF4	; 244
 4ac:	21 50       	subi	r18, 0x01	; 1
 4ae:	80 40       	sbci	r24, 0x00	; 0
 4b0:	90 40       	sbci	r25, 0x00	; 0
 4b2:	e1 f7       	brne	.-8      	; 0x4ac <main+0x6c>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <main+0x76>
 4b6:	00 00       	nop
	
	_delay_ms(5000);
	printf("AT+CWJAP=\"Michael iPhone\",\"hello dad\"\r\n");
 4b8:	8f e1       	ldi	r24, 0x1F	; 31
 4ba:	91 e0       	ldi	r25, 0x01	; 1
 4bc:	0e 94 c8 02 	call	0x590	; 0x590 <puts>
		printf("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
		
		_delay_ms(5000);
		readColor(&red, &green, &blue);
		printf("AT+CIPSEND=104\r\n");
		printf("GET https://api.thingspeak.com/update?api_key=4GOY7N6MQ2MKJOS9&field1=%05u&field2=%05u&field3=%05u\r\n", red, green, blue);
 4c0:	0e e8       	ldi	r16, 0x8E	; 142
 4c2:	11 e0       	ldi	r17, 0x01	; 1
 4c4:	2f ef       	ldi	r18, 0xFF	; 255
 4c6:	83 e2       	ldi	r24, 0x23	; 35
 4c8:	94 ef       	ldi	r25, 0xF4	; 244
 4ca:	21 50       	subi	r18, 0x01	; 1
 4cc:	80 40       	sbci	r24, 0x00	; 0
 4ce:	90 40       	sbci	r25, 0x00	; 0
 4d0:	e1 f7       	brne	.-8      	; 0x4ca <main+0x8a>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <main+0x94>
 4d4:	00 00       	nop
	_delay_ms(5000);
	printf("AT+CWJAP=\"Michael iPhone\",\"hello dad\"\r\n");
	
    while (1) {
		_delay_ms(5000);
		printf("AT+CIPMUX=0\r\n");
 4d6:	86 e4       	ldi	r24, 0x46	; 70
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	0e 94 c8 02 	call	0x590	; 0x590 <puts>
 4de:	2f ef       	ldi	r18, 0xFF	; 255
 4e0:	83 e2       	ldi	r24, 0x23	; 35
 4e2:	94 ef       	ldi	r25, 0xF4	; 244
 4e4:	21 50       	subi	r18, 0x01	; 1
 4e6:	80 40       	sbci	r24, 0x00	; 0
 4e8:	90 40       	sbci	r25, 0x00	; 0
 4ea:	e1 f7       	brne	.-8      	; 0x4e4 <main+0xa4>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <main+0xae>
 4ee:	00 00       	nop
		
		_delay_ms(5000);
		printf("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");
 4f0:	83 e5       	ldi	r24, 0x53	; 83
 4f2:	91 e0       	ldi	r25, 0x01	; 1
 4f4:	0e 94 c8 02 	call	0x590	; 0x590 <puts>
 4f8:	2f ef       	ldi	r18, 0xFF	; 255
 4fa:	83 e2       	ldi	r24, 0x23	; 35
 4fc:	94 ef       	ldi	r25, 0xF4	; 244
 4fe:	21 50       	subi	r18, 0x01	; 1
 500:	80 40       	sbci	r24, 0x00	; 0
 502:	90 40       	sbci	r25, 0x00	; 0
 504:	e1 f7       	brne	.-8      	; 0x4fe <main+0xbe>
 506:	00 c0       	rjmp	.+0      	; 0x508 <main+0xc8>
 508:	00 00       	nop
		
		_delay_ms(5000);
		readColor(&red, &green, &blue);
 50a:	ae 01       	movw	r20, r28
 50c:	4b 5f       	subi	r20, 0xFB	; 251
 50e:	5f 4f       	sbci	r21, 0xFF	; 255
 510:	be 01       	movw	r22, r28
 512:	6d 5f       	subi	r22, 0xFD	; 253
 514:	7f 4f       	sbci	r23, 0xFF	; 255
 516:	ce 01       	movw	r24, r28
 518:	01 96       	adiw	r24, 0x01	; 1
 51a:	0e 94 a4 01 	call	0x348	; 0x348 <readColor>
		printf("AT+CIPSEND=104\r\n");
 51e:	8e e7       	ldi	r24, 0x7E	; 126
 520:	91 e0       	ldi	r25, 0x01	; 1
 522:	0e 94 c8 02 	call	0x590	; 0x590 <puts>
		printf("GET https://api.thingspeak.com/update?api_key=4GOY7N6MQ2MKJOS9&field1=%05u&field2=%05u&field3=%05u\r\n", red, green, blue);
 526:	8e 81       	ldd	r24, Y+6	; 0x06
 528:	8f 93       	push	r24
 52a:	8d 81       	ldd	r24, Y+5	; 0x05
 52c:	8f 93       	push	r24
 52e:	8c 81       	ldd	r24, Y+4	; 0x04
 530:	8f 93       	push	r24
 532:	8b 81       	ldd	r24, Y+3	; 0x03
 534:	8f 93       	push	r24
 536:	8a 81       	ldd	r24, Y+2	; 0x02
 538:	8f 93       	push	r24
 53a:	89 81       	ldd	r24, Y+1	; 0x01
 53c:	8f 93       	push	r24
 53e:	1f 93       	push	r17
 540:	0f 93       	push	r16
 542:	0e 94 b2 02 	call	0x564	; 0x564 <printf>
 546:	2f ef       	ldi	r18, 0xFF	; 255
 548:	83 e2       	ldi	r24, 0x23	; 35
 54a:	94 ef       	ldi	r25, 0xF4	; 244
 54c:	21 50       	subi	r18, 0x01	; 1
 54e:	80 40       	sbci	r24, 0x00	; 0
 550:	90 40       	sbci	r25, 0x00	; 0
 552:	e1 f7       	brne	.-8      	; 0x54c <main+0x10c>
 554:	00 c0       	rjmp	.+0      	; 0x556 <main+0x116>
 556:	00 00       	nop
 558:	0f b6       	in	r0, 0x3f	; 63
 55a:	f8 94       	cli
 55c:	de bf       	out	0x3e, r29	; 62
 55e:	0f be       	out	0x3f, r0	; 63
 560:	cd bf       	out	0x3d, r28	; 61
 562:	b0 cf       	rjmp	.-160    	; 0x4c4 <main+0x84>

00000564 <printf>:
 564:	a0 e0       	ldi	r26, 0x00	; 0
 566:	b0 e0       	ldi	r27, 0x00	; 0
 568:	e8 eb       	ldi	r30, 0xB8	; 184
 56a:	f2 e0       	ldi	r31, 0x02	; 2
 56c:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__prologue_saves__+0x20>
 570:	ae 01       	movw	r20, r28
 572:	4b 5f       	subi	r20, 0xFB	; 251
 574:	5f 4f       	sbci	r21, 0xFF	; 255
 576:	fa 01       	movw	r30, r20
 578:	61 91       	ld	r22, Z+
 57a:	71 91       	ld	r23, Z+
 57c:	af 01       	movw	r20, r30
 57e:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <__data_end+0x2>
 582:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <__data_end+0x3>
 586:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <vfprintf>
 58a:	e2 e0       	ldi	r30, 0x02	; 2
 58c:	0c 94 b5 05 	jmp	0xb6a	; 0xb6a <__epilogue_restores__+0x20>

00000590 <puts>:
 590:	0f 93       	push	r16
 592:	1f 93       	push	r17
 594:	cf 93       	push	r28
 596:	df 93       	push	r29
 598:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <__data_end+0x2>
 59c:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <__data_end+0x3>
 5a0:	23 81       	ldd	r18, Z+3	; 0x03
 5a2:	21 ff       	sbrs	r18, 1
 5a4:	1b c0       	rjmp	.+54     	; 0x5dc <puts+0x4c>
 5a6:	8c 01       	movw	r16, r24
 5a8:	d0 e0       	ldi	r29, 0x00	; 0
 5aa:	c0 e0       	ldi	r28, 0x00	; 0
 5ac:	f8 01       	movw	r30, r16
 5ae:	81 91       	ld	r24, Z+
 5b0:	8f 01       	movw	r16, r30
 5b2:	60 91 f6 01 	lds	r22, 0x01F6	; 0x8001f6 <__data_end+0x2>
 5b6:	70 91 f7 01 	lds	r23, 0x01F7	; 0x8001f7 <__data_end+0x3>
 5ba:	db 01       	movw	r26, r22
 5bc:	18 96       	adiw	r26, 0x08	; 8
 5be:	ed 91       	ld	r30, X+
 5c0:	fc 91       	ld	r31, X
 5c2:	19 97       	sbiw	r26, 0x09	; 9
 5c4:	88 23       	and	r24, r24
 5c6:	31 f0       	breq	.+12     	; 0x5d4 <puts+0x44>
 5c8:	09 95       	icall
 5ca:	89 2b       	or	r24, r25
 5cc:	79 f3       	breq	.-34     	; 0x5ac <puts+0x1c>
 5ce:	df ef       	ldi	r29, 0xFF	; 255
 5d0:	cf ef       	ldi	r28, 0xFF	; 255
 5d2:	ec cf       	rjmp	.-40     	; 0x5ac <puts+0x1c>
 5d4:	8a e0       	ldi	r24, 0x0A	; 10
 5d6:	09 95       	icall
 5d8:	89 2b       	or	r24, r25
 5da:	19 f0       	breq	.+6      	; 0x5e2 <puts+0x52>
 5dc:	8f ef       	ldi	r24, 0xFF	; 255
 5de:	9f ef       	ldi	r25, 0xFF	; 255
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <puts+0x56>
 5e2:	8d 2f       	mov	r24, r29
 5e4:	9c 2f       	mov	r25, r28
 5e6:	df 91       	pop	r29
 5e8:	cf 91       	pop	r28
 5ea:	1f 91       	pop	r17
 5ec:	0f 91       	pop	r16
 5ee:	08 95       	ret

000005f0 <vfprintf>:
 5f0:	ab e0       	ldi	r26, 0x0B	; 11
 5f2:	b0 e0       	ldi	r27, 0x00	; 0
 5f4:	ee ef       	ldi	r30, 0xFE	; 254
 5f6:	f2 e0       	ldi	r31, 0x02	; 2
 5f8:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__prologue_saves__>
 5fc:	6c 01       	movw	r12, r24
 5fe:	7b 01       	movw	r14, r22
 600:	8a 01       	movw	r16, r20
 602:	fc 01       	movw	r30, r24
 604:	17 82       	std	Z+7, r1	; 0x07
 606:	16 82       	std	Z+6, r1	; 0x06
 608:	83 81       	ldd	r24, Z+3	; 0x03
 60a:	81 ff       	sbrs	r24, 1
 60c:	cc c1       	rjmp	.+920    	; 0x9a6 <__stack+0xa7>
 60e:	ce 01       	movw	r24, r28
 610:	01 96       	adiw	r24, 0x01	; 1
 612:	3c 01       	movw	r6, r24
 614:	f6 01       	movw	r30, r12
 616:	93 81       	ldd	r25, Z+3	; 0x03
 618:	f7 01       	movw	r30, r14
 61a:	93 fd       	sbrc	r25, 3
 61c:	85 91       	lpm	r24, Z+
 61e:	93 ff       	sbrs	r25, 3
 620:	81 91       	ld	r24, Z+
 622:	7f 01       	movw	r14, r30
 624:	88 23       	and	r24, r24
 626:	09 f4       	brne	.+2      	; 0x62a <vfprintf+0x3a>
 628:	ba c1       	rjmp	.+884    	; 0x99e <__stack+0x9f>
 62a:	85 32       	cpi	r24, 0x25	; 37
 62c:	39 f4       	brne	.+14     	; 0x63c <vfprintf+0x4c>
 62e:	93 fd       	sbrc	r25, 3
 630:	85 91       	lpm	r24, Z+
 632:	93 ff       	sbrs	r25, 3
 634:	81 91       	ld	r24, Z+
 636:	7f 01       	movw	r14, r30
 638:	85 32       	cpi	r24, 0x25	; 37
 63a:	29 f4       	brne	.+10     	; 0x646 <vfprintf+0x56>
 63c:	b6 01       	movw	r22, r12
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 644:	e7 cf       	rjmp	.-50     	; 0x614 <vfprintf+0x24>
 646:	91 2c       	mov	r9, r1
 648:	21 2c       	mov	r2, r1
 64a:	31 2c       	mov	r3, r1
 64c:	ff e1       	ldi	r31, 0x1F	; 31
 64e:	f3 15       	cp	r31, r3
 650:	d8 f0       	brcs	.+54     	; 0x688 <vfprintf+0x98>
 652:	8b 32       	cpi	r24, 0x2B	; 43
 654:	79 f0       	breq	.+30     	; 0x674 <vfprintf+0x84>
 656:	38 f4       	brcc	.+14     	; 0x666 <vfprintf+0x76>
 658:	80 32       	cpi	r24, 0x20	; 32
 65a:	79 f0       	breq	.+30     	; 0x67a <vfprintf+0x8a>
 65c:	83 32       	cpi	r24, 0x23	; 35
 65e:	a1 f4       	brne	.+40     	; 0x688 <vfprintf+0x98>
 660:	23 2d       	mov	r18, r3
 662:	20 61       	ori	r18, 0x10	; 16
 664:	1d c0       	rjmp	.+58     	; 0x6a0 <vfprintf+0xb0>
 666:	8d 32       	cpi	r24, 0x2D	; 45
 668:	61 f0       	breq	.+24     	; 0x682 <vfprintf+0x92>
 66a:	80 33       	cpi	r24, 0x30	; 48
 66c:	69 f4       	brne	.+26     	; 0x688 <vfprintf+0x98>
 66e:	23 2d       	mov	r18, r3
 670:	21 60       	ori	r18, 0x01	; 1
 672:	16 c0       	rjmp	.+44     	; 0x6a0 <vfprintf+0xb0>
 674:	83 2d       	mov	r24, r3
 676:	82 60       	ori	r24, 0x02	; 2
 678:	38 2e       	mov	r3, r24
 67a:	e3 2d       	mov	r30, r3
 67c:	e4 60       	ori	r30, 0x04	; 4
 67e:	3e 2e       	mov	r3, r30
 680:	2a c0       	rjmp	.+84     	; 0x6d6 <vfprintf+0xe6>
 682:	f3 2d       	mov	r31, r3
 684:	f8 60       	ori	r31, 0x08	; 8
 686:	1d c0       	rjmp	.+58     	; 0x6c2 <vfprintf+0xd2>
 688:	37 fc       	sbrc	r3, 7
 68a:	2d c0       	rjmp	.+90     	; 0x6e6 <vfprintf+0xf6>
 68c:	20 ed       	ldi	r18, 0xD0	; 208
 68e:	28 0f       	add	r18, r24
 690:	2a 30       	cpi	r18, 0x0A	; 10
 692:	40 f0       	brcs	.+16     	; 0x6a4 <vfprintf+0xb4>
 694:	8e 32       	cpi	r24, 0x2E	; 46
 696:	b9 f4       	brne	.+46     	; 0x6c6 <vfprintf+0xd6>
 698:	36 fc       	sbrc	r3, 6
 69a:	81 c1       	rjmp	.+770    	; 0x99e <__stack+0x9f>
 69c:	23 2d       	mov	r18, r3
 69e:	20 64       	ori	r18, 0x40	; 64
 6a0:	32 2e       	mov	r3, r18
 6a2:	19 c0       	rjmp	.+50     	; 0x6d6 <vfprintf+0xe6>
 6a4:	36 fe       	sbrs	r3, 6
 6a6:	06 c0       	rjmp	.+12     	; 0x6b4 <vfprintf+0xc4>
 6a8:	8a e0       	ldi	r24, 0x0A	; 10
 6aa:	98 9e       	mul	r9, r24
 6ac:	20 0d       	add	r18, r0
 6ae:	11 24       	eor	r1, r1
 6b0:	92 2e       	mov	r9, r18
 6b2:	11 c0       	rjmp	.+34     	; 0x6d6 <vfprintf+0xe6>
 6b4:	ea e0       	ldi	r30, 0x0A	; 10
 6b6:	2e 9e       	mul	r2, r30
 6b8:	20 0d       	add	r18, r0
 6ba:	11 24       	eor	r1, r1
 6bc:	22 2e       	mov	r2, r18
 6be:	f3 2d       	mov	r31, r3
 6c0:	f0 62       	ori	r31, 0x20	; 32
 6c2:	3f 2e       	mov	r3, r31
 6c4:	08 c0       	rjmp	.+16     	; 0x6d6 <vfprintf+0xe6>
 6c6:	8c 36       	cpi	r24, 0x6C	; 108
 6c8:	21 f4       	brne	.+8      	; 0x6d2 <vfprintf+0xe2>
 6ca:	83 2d       	mov	r24, r3
 6cc:	80 68       	ori	r24, 0x80	; 128
 6ce:	38 2e       	mov	r3, r24
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <vfprintf+0xe6>
 6d2:	88 36       	cpi	r24, 0x68	; 104
 6d4:	41 f4       	brne	.+16     	; 0x6e6 <vfprintf+0xf6>
 6d6:	f7 01       	movw	r30, r14
 6d8:	93 fd       	sbrc	r25, 3
 6da:	85 91       	lpm	r24, Z+
 6dc:	93 ff       	sbrs	r25, 3
 6de:	81 91       	ld	r24, Z+
 6e0:	7f 01       	movw	r14, r30
 6e2:	81 11       	cpse	r24, r1
 6e4:	b3 cf       	rjmp	.-154    	; 0x64c <vfprintf+0x5c>
 6e6:	98 2f       	mov	r25, r24
 6e8:	9f 7d       	andi	r25, 0xDF	; 223
 6ea:	95 54       	subi	r25, 0x45	; 69
 6ec:	93 30       	cpi	r25, 0x03	; 3
 6ee:	28 f4       	brcc	.+10     	; 0x6fa <vfprintf+0x10a>
 6f0:	0c 5f       	subi	r16, 0xFC	; 252
 6f2:	1f 4f       	sbci	r17, 0xFF	; 255
 6f4:	9f e3       	ldi	r25, 0x3F	; 63
 6f6:	99 83       	std	Y+1, r25	; 0x01
 6f8:	0d c0       	rjmp	.+26     	; 0x714 <vfprintf+0x124>
 6fa:	83 36       	cpi	r24, 0x63	; 99
 6fc:	31 f0       	breq	.+12     	; 0x70a <vfprintf+0x11a>
 6fe:	83 37       	cpi	r24, 0x73	; 115
 700:	71 f0       	breq	.+28     	; 0x71e <vfprintf+0x12e>
 702:	83 35       	cpi	r24, 0x53	; 83
 704:	09 f0       	breq	.+2      	; 0x708 <vfprintf+0x118>
 706:	59 c0       	rjmp	.+178    	; 0x7ba <vfprintf+0x1ca>
 708:	21 c0       	rjmp	.+66     	; 0x74c <vfprintf+0x15c>
 70a:	f8 01       	movw	r30, r16
 70c:	80 81       	ld	r24, Z
 70e:	89 83       	std	Y+1, r24	; 0x01
 710:	0e 5f       	subi	r16, 0xFE	; 254
 712:	1f 4f       	sbci	r17, 0xFF	; 255
 714:	88 24       	eor	r8, r8
 716:	83 94       	inc	r8
 718:	91 2c       	mov	r9, r1
 71a:	53 01       	movw	r10, r6
 71c:	13 c0       	rjmp	.+38     	; 0x744 <vfprintf+0x154>
 71e:	28 01       	movw	r4, r16
 720:	f2 e0       	ldi	r31, 0x02	; 2
 722:	4f 0e       	add	r4, r31
 724:	51 1c       	adc	r5, r1
 726:	f8 01       	movw	r30, r16
 728:	a0 80       	ld	r10, Z
 72a:	b1 80       	ldd	r11, Z+1	; 0x01
 72c:	36 fe       	sbrs	r3, 6
 72e:	03 c0       	rjmp	.+6      	; 0x736 <vfprintf+0x146>
 730:	69 2d       	mov	r22, r9
 732:	70 e0       	ldi	r23, 0x00	; 0
 734:	02 c0       	rjmp	.+4      	; 0x73a <vfprintf+0x14a>
 736:	6f ef       	ldi	r22, 0xFF	; 255
 738:	7f ef       	ldi	r23, 0xFF	; 255
 73a:	c5 01       	movw	r24, r10
 73c:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <strnlen>
 740:	4c 01       	movw	r8, r24
 742:	82 01       	movw	r16, r4
 744:	f3 2d       	mov	r31, r3
 746:	ff 77       	andi	r31, 0x7F	; 127
 748:	3f 2e       	mov	r3, r31
 74a:	16 c0       	rjmp	.+44     	; 0x778 <vfprintf+0x188>
 74c:	28 01       	movw	r4, r16
 74e:	22 e0       	ldi	r18, 0x02	; 2
 750:	42 0e       	add	r4, r18
 752:	51 1c       	adc	r5, r1
 754:	f8 01       	movw	r30, r16
 756:	a0 80       	ld	r10, Z
 758:	b1 80       	ldd	r11, Z+1	; 0x01
 75a:	36 fe       	sbrs	r3, 6
 75c:	03 c0       	rjmp	.+6      	; 0x764 <vfprintf+0x174>
 75e:	69 2d       	mov	r22, r9
 760:	70 e0       	ldi	r23, 0x00	; 0
 762:	02 c0       	rjmp	.+4      	; 0x768 <vfprintf+0x178>
 764:	6f ef       	ldi	r22, 0xFF	; 255
 766:	7f ef       	ldi	r23, 0xFF	; 255
 768:	c5 01       	movw	r24, r10
 76a:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <strnlen_P>
 76e:	4c 01       	movw	r8, r24
 770:	f3 2d       	mov	r31, r3
 772:	f0 68       	ori	r31, 0x80	; 128
 774:	3f 2e       	mov	r3, r31
 776:	82 01       	movw	r16, r4
 778:	33 fc       	sbrc	r3, 3
 77a:	1b c0       	rjmp	.+54     	; 0x7b2 <vfprintf+0x1c2>
 77c:	82 2d       	mov	r24, r2
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	88 16       	cp	r8, r24
 782:	99 06       	cpc	r9, r25
 784:	b0 f4       	brcc	.+44     	; 0x7b2 <vfprintf+0x1c2>
 786:	b6 01       	movw	r22, r12
 788:	80 e2       	ldi	r24, 0x20	; 32
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 790:	2a 94       	dec	r2
 792:	f4 cf       	rjmp	.-24     	; 0x77c <vfprintf+0x18c>
 794:	f5 01       	movw	r30, r10
 796:	37 fc       	sbrc	r3, 7
 798:	85 91       	lpm	r24, Z+
 79a:	37 fe       	sbrs	r3, 7
 79c:	81 91       	ld	r24, Z+
 79e:	5f 01       	movw	r10, r30
 7a0:	b6 01       	movw	r22, r12
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 7a8:	21 10       	cpse	r2, r1
 7aa:	2a 94       	dec	r2
 7ac:	21 e0       	ldi	r18, 0x01	; 1
 7ae:	82 1a       	sub	r8, r18
 7b0:	91 08       	sbc	r9, r1
 7b2:	81 14       	cp	r8, r1
 7b4:	91 04       	cpc	r9, r1
 7b6:	71 f7       	brne	.-36     	; 0x794 <vfprintf+0x1a4>
 7b8:	e8 c0       	rjmp	.+464    	; 0x98a <__stack+0x8b>
 7ba:	84 36       	cpi	r24, 0x64	; 100
 7bc:	11 f0       	breq	.+4      	; 0x7c2 <vfprintf+0x1d2>
 7be:	89 36       	cpi	r24, 0x69	; 105
 7c0:	41 f5       	brne	.+80     	; 0x812 <vfprintf+0x222>
 7c2:	f8 01       	movw	r30, r16
 7c4:	37 fe       	sbrs	r3, 7
 7c6:	07 c0       	rjmp	.+14     	; 0x7d6 <vfprintf+0x1e6>
 7c8:	60 81       	ld	r22, Z
 7ca:	71 81       	ldd	r23, Z+1	; 0x01
 7cc:	82 81       	ldd	r24, Z+2	; 0x02
 7ce:	93 81       	ldd	r25, Z+3	; 0x03
 7d0:	0c 5f       	subi	r16, 0xFC	; 252
 7d2:	1f 4f       	sbci	r17, 0xFF	; 255
 7d4:	08 c0       	rjmp	.+16     	; 0x7e6 <vfprintf+0x1f6>
 7d6:	60 81       	ld	r22, Z
 7d8:	71 81       	ldd	r23, Z+1	; 0x01
 7da:	07 2e       	mov	r0, r23
 7dc:	00 0c       	add	r0, r0
 7de:	88 0b       	sbc	r24, r24
 7e0:	99 0b       	sbc	r25, r25
 7e2:	0e 5f       	subi	r16, 0xFE	; 254
 7e4:	1f 4f       	sbci	r17, 0xFF	; 255
 7e6:	f3 2d       	mov	r31, r3
 7e8:	ff 76       	andi	r31, 0x6F	; 111
 7ea:	3f 2e       	mov	r3, r31
 7ec:	97 ff       	sbrs	r25, 7
 7ee:	09 c0       	rjmp	.+18     	; 0x802 <vfprintf+0x212>
 7f0:	90 95       	com	r25
 7f2:	80 95       	com	r24
 7f4:	70 95       	com	r23
 7f6:	61 95       	neg	r22
 7f8:	7f 4f       	sbci	r23, 0xFF	; 255
 7fa:	8f 4f       	sbci	r24, 0xFF	; 255
 7fc:	9f 4f       	sbci	r25, 0xFF	; 255
 7fe:	f0 68       	ori	r31, 0x80	; 128
 800:	3f 2e       	mov	r3, r31
 802:	2a e0       	ldi	r18, 0x0A	; 10
 804:	30 e0       	ldi	r19, 0x00	; 0
 806:	a3 01       	movw	r20, r6
 808:	0e 94 2b 05 	call	0xa56	; 0xa56 <__ultoa_invert>
 80c:	88 2e       	mov	r8, r24
 80e:	86 18       	sub	r8, r6
 810:	45 c0       	rjmp	.+138    	; 0x89c <vfprintf+0x2ac>
 812:	85 37       	cpi	r24, 0x75	; 117
 814:	31 f4       	brne	.+12     	; 0x822 <vfprintf+0x232>
 816:	23 2d       	mov	r18, r3
 818:	2f 7e       	andi	r18, 0xEF	; 239
 81a:	b2 2e       	mov	r11, r18
 81c:	2a e0       	ldi	r18, 0x0A	; 10
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	25 c0       	rjmp	.+74     	; 0x86c <vfprintf+0x27c>
 822:	93 2d       	mov	r25, r3
 824:	99 7f       	andi	r25, 0xF9	; 249
 826:	b9 2e       	mov	r11, r25
 828:	8f 36       	cpi	r24, 0x6F	; 111
 82a:	c1 f0       	breq	.+48     	; 0x85c <vfprintf+0x26c>
 82c:	18 f4       	brcc	.+6      	; 0x834 <vfprintf+0x244>
 82e:	88 35       	cpi	r24, 0x58	; 88
 830:	79 f0       	breq	.+30     	; 0x850 <vfprintf+0x260>
 832:	b5 c0       	rjmp	.+362    	; 0x99e <__stack+0x9f>
 834:	80 37       	cpi	r24, 0x70	; 112
 836:	19 f0       	breq	.+6      	; 0x83e <vfprintf+0x24e>
 838:	88 37       	cpi	r24, 0x78	; 120
 83a:	21 f0       	breq	.+8      	; 0x844 <vfprintf+0x254>
 83c:	b0 c0       	rjmp	.+352    	; 0x99e <__stack+0x9f>
 83e:	e9 2f       	mov	r30, r25
 840:	e0 61       	ori	r30, 0x10	; 16
 842:	be 2e       	mov	r11, r30
 844:	b4 fe       	sbrs	r11, 4
 846:	0d c0       	rjmp	.+26     	; 0x862 <vfprintf+0x272>
 848:	fb 2d       	mov	r31, r11
 84a:	f4 60       	ori	r31, 0x04	; 4
 84c:	bf 2e       	mov	r11, r31
 84e:	09 c0       	rjmp	.+18     	; 0x862 <vfprintf+0x272>
 850:	34 fe       	sbrs	r3, 4
 852:	0a c0       	rjmp	.+20     	; 0x868 <vfprintf+0x278>
 854:	29 2f       	mov	r18, r25
 856:	26 60       	ori	r18, 0x06	; 6
 858:	b2 2e       	mov	r11, r18
 85a:	06 c0       	rjmp	.+12     	; 0x868 <vfprintf+0x278>
 85c:	28 e0       	ldi	r18, 0x08	; 8
 85e:	30 e0       	ldi	r19, 0x00	; 0
 860:	05 c0       	rjmp	.+10     	; 0x86c <vfprintf+0x27c>
 862:	20 e1       	ldi	r18, 0x10	; 16
 864:	30 e0       	ldi	r19, 0x00	; 0
 866:	02 c0       	rjmp	.+4      	; 0x86c <vfprintf+0x27c>
 868:	20 e1       	ldi	r18, 0x10	; 16
 86a:	32 e0       	ldi	r19, 0x02	; 2
 86c:	f8 01       	movw	r30, r16
 86e:	b7 fe       	sbrs	r11, 7
 870:	07 c0       	rjmp	.+14     	; 0x880 <vfprintf+0x290>
 872:	60 81       	ld	r22, Z
 874:	71 81       	ldd	r23, Z+1	; 0x01
 876:	82 81       	ldd	r24, Z+2	; 0x02
 878:	93 81       	ldd	r25, Z+3	; 0x03
 87a:	0c 5f       	subi	r16, 0xFC	; 252
 87c:	1f 4f       	sbci	r17, 0xFF	; 255
 87e:	06 c0       	rjmp	.+12     	; 0x88c <vfprintf+0x29c>
 880:	60 81       	ld	r22, Z
 882:	71 81       	ldd	r23, Z+1	; 0x01
 884:	80 e0       	ldi	r24, 0x00	; 0
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	0e 5f       	subi	r16, 0xFE	; 254
 88a:	1f 4f       	sbci	r17, 0xFF	; 255
 88c:	a3 01       	movw	r20, r6
 88e:	0e 94 2b 05 	call	0xa56	; 0xa56 <__ultoa_invert>
 892:	88 2e       	mov	r8, r24
 894:	86 18       	sub	r8, r6
 896:	fb 2d       	mov	r31, r11
 898:	ff 77       	andi	r31, 0x7F	; 127
 89a:	3f 2e       	mov	r3, r31
 89c:	36 fe       	sbrs	r3, 6
 89e:	0d c0       	rjmp	.+26     	; 0x8ba <vfprintf+0x2ca>
 8a0:	23 2d       	mov	r18, r3
 8a2:	2e 7f       	andi	r18, 0xFE	; 254
 8a4:	a2 2e       	mov	r10, r18
 8a6:	89 14       	cp	r8, r9
 8a8:	58 f4       	brcc	.+22     	; 0x8c0 <vfprintf+0x2d0>
 8aa:	34 fe       	sbrs	r3, 4
 8ac:	0b c0       	rjmp	.+22     	; 0x8c4 <vfprintf+0x2d4>
 8ae:	32 fc       	sbrc	r3, 2
 8b0:	09 c0       	rjmp	.+18     	; 0x8c4 <vfprintf+0x2d4>
 8b2:	83 2d       	mov	r24, r3
 8b4:	8e 7e       	andi	r24, 0xEE	; 238
 8b6:	a8 2e       	mov	r10, r24
 8b8:	05 c0       	rjmp	.+10     	; 0x8c4 <vfprintf+0x2d4>
 8ba:	b8 2c       	mov	r11, r8
 8bc:	a3 2c       	mov	r10, r3
 8be:	03 c0       	rjmp	.+6      	; 0x8c6 <vfprintf+0x2d6>
 8c0:	b8 2c       	mov	r11, r8
 8c2:	01 c0       	rjmp	.+2      	; 0x8c6 <vfprintf+0x2d6>
 8c4:	b9 2c       	mov	r11, r9
 8c6:	a4 fe       	sbrs	r10, 4
 8c8:	0f c0       	rjmp	.+30     	; 0x8e8 <vfprintf+0x2f8>
 8ca:	fe 01       	movw	r30, r28
 8cc:	e8 0d       	add	r30, r8
 8ce:	f1 1d       	adc	r31, r1
 8d0:	80 81       	ld	r24, Z
 8d2:	80 33       	cpi	r24, 0x30	; 48
 8d4:	21 f4       	brne	.+8      	; 0x8de <vfprintf+0x2ee>
 8d6:	9a 2d       	mov	r25, r10
 8d8:	99 7e       	andi	r25, 0xE9	; 233
 8da:	a9 2e       	mov	r10, r25
 8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <vfprintf+0x300>
 8de:	a2 fe       	sbrs	r10, 2
 8e0:	06 c0       	rjmp	.+12     	; 0x8ee <vfprintf+0x2fe>
 8e2:	b3 94       	inc	r11
 8e4:	b3 94       	inc	r11
 8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <vfprintf+0x300>
 8e8:	8a 2d       	mov	r24, r10
 8ea:	86 78       	andi	r24, 0x86	; 134
 8ec:	09 f0       	breq	.+2      	; 0x8f0 <vfprintf+0x300>
 8ee:	b3 94       	inc	r11
 8f0:	a3 fc       	sbrc	r10, 3
 8f2:	11 c0       	rjmp	.+34     	; 0x916 <__stack+0x17>
 8f4:	a0 fe       	sbrs	r10, 0
 8f6:	06 c0       	rjmp	.+12     	; 0x904 <__stack+0x5>
 8f8:	b2 14       	cp	r11, r2
 8fa:	88 f4       	brcc	.+34     	; 0x91e <__stack+0x1f>
 8fc:	28 0c       	add	r2, r8
 8fe:	92 2c       	mov	r9, r2
 900:	9b 18       	sub	r9, r11
 902:	0e c0       	rjmp	.+28     	; 0x920 <__stack+0x21>
 904:	b2 14       	cp	r11, r2
 906:	60 f4       	brcc	.+24     	; 0x920 <__stack+0x21>
 908:	b6 01       	movw	r22, r12
 90a:	80 e2       	ldi	r24, 0x20	; 32
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 912:	b3 94       	inc	r11
 914:	f7 cf       	rjmp	.-18     	; 0x904 <__stack+0x5>
 916:	b2 14       	cp	r11, r2
 918:	18 f4       	brcc	.+6      	; 0x920 <__stack+0x21>
 91a:	2b 18       	sub	r2, r11
 91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0x23>
 91e:	98 2c       	mov	r9, r8
 920:	21 2c       	mov	r2, r1
 922:	a4 fe       	sbrs	r10, 4
 924:	10 c0       	rjmp	.+32     	; 0x946 <__stack+0x47>
 926:	b6 01       	movw	r22, r12
 928:	80 e3       	ldi	r24, 0x30	; 48
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 930:	a2 fe       	sbrs	r10, 2
 932:	17 c0       	rjmp	.+46     	; 0x962 <__stack+0x63>
 934:	a1 fc       	sbrc	r10, 1
 936:	03 c0       	rjmp	.+6      	; 0x93e <__stack+0x3f>
 938:	88 e7       	ldi	r24, 0x78	; 120
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	02 c0       	rjmp	.+4      	; 0x942 <__stack+0x43>
 93e:	88 e5       	ldi	r24, 0x58	; 88
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	b6 01       	movw	r22, r12
 944:	0c c0       	rjmp	.+24     	; 0x95e <__stack+0x5f>
 946:	8a 2d       	mov	r24, r10
 948:	86 78       	andi	r24, 0x86	; 134
 94a:	59 f0       	breq	.+22     	; 0x962 <__stack+0x63>
 94c:	a1 fe       	sbrs	r10, 1
 94e:	02 c0       	rjmp	.+4      	; 0x954 <__stack+0x55>
 950:	8b e2       	ldi	r24, 0x2B	; 43
 952:	01 c0       	rjmp	.+2      	; 0x956 <__stack+0x57>
 954:	80 e2       	ldi	r24, 0x20	; 32
 956:	a7 fc       	sbrc	r10, 7
 958:	8d e2       	ldi	r24, 0x2D	; 45
 95a:	b6 01       	movw	r22, r12
 95c:	90 e0       	ldi	r25, 0x00	; 0
 95e:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 962:	89 14       	cp	r8, r9
 964:	38 f4       	brcc	.+14     	; 0x974 <__stack+0x75>
 966:	b6 01       	movw	r22, r12
 968:	80 e3       	ldi	r24, 0x30	; 48
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 970:	9a 94       	dec	r9
 972:	f7 cf       	rjmp	.-18     	; 0x962 <__stack+0x63>
 974:	8a 94       	dec	r8
 976:	f3 01       	movw	r30, r6
 978:	e8 0d       	add	r30, r8
 97a:	f1 1d       	adc	r31, r1
 97c:	80 81       	ld	r24, Z
 97e:	b6 01       	movw	r22, r12
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 986:	81 10       	cpse	r8, r1
 988:	f5 cf       	rjmp	.-22     	; 0x974 <__stack+0x75>
 98a:	22 20       	and	r2, r2
 98c:	09 f4       	brne	.+2      	; 0x990 <__stack+0x91>
 98e:	42 ce       	rjmp	.-892    	; 0x614 <vfprintf+0x24>
 990:	b6 01       	movw	r22, r12
 992:	80 e2       	ldi	r24, 0x20	; 32
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	0e 94 ef 04 	call	0x9de	; 0x9de <fputc>
 99a:	2a 94       	dec	r2
 99c:	f6 cf       	rjmp	.-20     	; 0x98a <__stack+0x8b>
 99e:	f6 01       	movw	r30, r12
 9a0:	86 81       	ldd	r24, Z+6	; 0x06
 9a2:	97 81       	ldd	r25, Z+7	; 0x07
 9a4:	02 c0       	rjmp	.+4      	; 0x9aa <__stack+0xab>
 9a6:	8f ef       	ldi	r24, 0xFF	; 255
 9a8:	9f ef       	ldi	r25, 0xFF	; 255
 9aa:	2b 96       	adiw	r28, 0x0b	; 11
 9ac:	e2 e1       	ldi	r30, 0x12	; 18
 9ae:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__epilogue_restores__>

000009b2 <strnlen_P>:
 9b2:	fc 01       	movw	r30, r24
 9b4:	05 90       	lpm	r0, Z+
 9b6:	61 50       	subi	r22, 0x01	; 1
 9b8:	70 40       	sbci	r23, 0x00	; 0
 9ba:	01 10       	cpse	r0, r1
 9bc:	d8 f7       	brcc	.-10     	; 0x9b4 <strnlen_P+0x2>
 9be:	80 95       	com	r24
 9c0:	90 95       	com	r25
 9c2:	8e 0f       	add	r24, r30
 9c4:	9f 1f       	adc	r25, r31
 9c6:	08 95       	ret

000009c8 <strnlen>:
 9c8:	fc 01       	movw	r30, r24
 9ca:	61 50       	subi	r22, 0x01	; 1
 9cc:	70 40       	sbci	r23, 0x00	; 0
 9ce:	01 90       	ld	r0, Z+
 9d0:	01 10       	cpse	r0, r1
 9d2:	d8 f7       	brcc	.-10     	; 0x9ca <strnlen+0x2>
 9d4:	80 95       	com	r24
 9d6:	90 95       	com	r25
 9d8:	8e 0f       	add	r24, r30
 9da:	9f 1f       	adc	r25, r31
 9dc:	08 95       	ret

000009de <fputc>:
 9de:	0f 93       	push	r16
 9e0:	1f 93       	push	r17
 9e2:	cf 93       	push	r28
 9e4:	df 93       	push	r29
 9e6:	fb 01       	movw	r30, r22
 9e8:	23 81       	ldd	r18, Z+3	; 0x03
 9ea:	21 fd       	sbrc	r18, 1
 9ec:	03 c0       	rjmp	.+6      	; 0x9f4 <fputc+0x16>
 9ee:	8f ef       	ldi	r24, 0xFF	; 255
 9f0:	9f ef       	ldi	r25, 0xFF	; 255
 9f2:	2c c0       	rjmp	.+88     	; 0xa4c <fputc+0x6e>
 9f4:	22 ff       	sbrs	r18, 2
 9f6:	16 c0       	rjmp	.+44     	; 0xa24 <fputc+0x46>
 9f8:	46 81       	ldd	r20, Z+6	; 0x06
 9fa:	57 81       	ldd	r21, Z+7	; 0x07
 9fc:	24 81       	ldd	r18, Z+4	; 0x04
 9fe:	35 81       	ldd	r19, Z+5	; 0x05
 a00:	42 17       	cp	r20, r18
 a02:	53 07       	cpc	r21, r19
 a04:	44 f4       	brge	.+16     	; 0xa16 <fputc+0x38>
 a06:	a0 81       	ld	r26, Z
 a08:	b1 81       	ldd	r27, Z+1	; 0x01
 a0a:	9d 01       	movw	r18, r26
 a0c:	2f 5f       	subi	r18, 0xFF	; 255
 a0e:	3f 4f       	sbci	r19, 0xFF	; 255
 a10:	31 83       	std	Z+1, r19	; 0x01
 a12:	20 83       	st	Z, r18
 a14:	8c 93       	st	X, r24
 a16:	26 81       	ldd	r18, Z+6	; 0x06
 a18:	37 81       	ldd	r19, Z+7	; 0x07
 a1a:	2f 5f       	subi	r18, 0xFF	; 255
 a1c:	3f 4f       	sbci	r19, 0xFF	; 255
 a1e:	37 83       	std	Z+7, r19	; 0x07
 a20:	26 83       	std	Z+6, r18	; 0x06
 a22:	14 c0       	rjmp	.+40     	; 0xa4c <fputc+0x6e>
 a24:	8b 01       	movw	r16, r22
 a26:	ec 01       	movw	r28, r24
 a28:	fb 01       	movw	r30, r22
 a2a:	00 84       	ldd	r0, Z+8	; 0x08
 a2c:	f1 85       	ldd	r31, Z+9	; 0x09
 a2e:	e0 2d       	mov	r30, r0
 a30:	09 95       	icall
 a32:	89 2b       	or	r24, r25
 a34:	e1 f6       	brne	.-72     	; 0x9ee <fputc+0x10>
 a36:	d8 01       	movw	r26, r16
 a38:	16 96       	adiw	r26, 0x06	; 6
 a3a:	8d 91       	ld	r24, X+
 a3c:	9c 91       	ld	r25, X
 a3e:	17 97       	sbiw	r26, 0x07	; 7
 a40:	01 96       	adiw	r24, 0x01	; 1
 a42:	17 96       	adiw	r26, 0x07	; 7
 a44:	9c 93       	st	X, r25
 a46:	8e 93       	st	-X, r24
 a48:	16 97       	sbiw	r26, 0x06	; 6
 a4a:	ce 01       	movw	r24, r28
 a4c:	df 91       	pop	r29
 a4e:	cf 91       	pop	r28
 a50:	1f 91       	pop	r17
 a52:	0f 91       	pop	r16
 a54:	08 95       	ret

00000a56 <__ultoa_invert>:
 a56:	fa 01       	movw	r30, r20
 a58:	aa 27       	eor	r26, r26
 a5a:	28 30       	cpi	r18, 0x08	; 8
 a5c:	51 f1       	breq	.+84     	; 0xab2 <__ultoa_invert+0x5c>
 a5e:	20 31       	cpi	r18, 0x10	; 16
 a60:	81 f1       	breq	.+96     	; 0xac2 <__ultoa_invert+0x6c>
 a62:	e8 94       	clt
 a64:	6f 93       	push	r22
 a66:	6e 7f       	andi	r22, 0xFE	; 254
 a68:	6e 5f       	subi	r22, 0xFE	; 254
 a6a:	7f 4f       	sbci	r23, 0xFF	; 255
 a6c:	8f 4f       	sbci	r24, 0xFF	; 255
 a6e:	9f 4f       	sbci	r25, 0xFF	; 255
 a70:	af 4f       	sbci	r26, 0xFF	; 255
 a72:	b1 e0       	ldi	r27, 0x01	; 1
 a74:	3e d0       	rcall	.+124    	; 0xaf2 <__ultoa_invert+0x9c>
 a76:	b4 e0       	ldi	r27, 0x04	; 4
 a78:	3c d0       	rcall	.+120    	; 0xaf2 <__ultoa_invert+0x9c>
 a7a:	67 0f       	add	r22, r23
 a7c:	78 1f       	adc	r23, r24
 a7e:	89 1f       	adc	r24, r25
 a80:	9a 1f       	adc	r25, r26
 a82:	a1 1d       	adc	r26, r1
 a84:	68 0f       	add	r22, r24
 a86:	79 1f       	adc	r23, r25
 a88:	8a 1f       	adc	r24, r26
 a8a:	91 1d       	adc	r25, r1
 a8c:	a1 1d       	adc	r26, r1
 a8e:	6a 0f       	add	r22, r26
 a90:	71 1d       	adc	r23, r1
 a92:	81 1d       	adc	r24, r1
 a94:	91 1d       	adc	r25, r1
 a96:	a1 1d       	adc	r26, r1
 a98:	20 d0       	rcall	.+64     	; 0xada <__ultoa_invert+0x84>
 a9a:	09 f4       	brne	.+2      	; 0xa9e <__ultoa_invert+0x48>
 a9c:	68 94       	set
 a9e:	3f 91       	pop	r19
 aa0:	2a e0       	ldi	r18, 0x0A	; 10
 aa2:	26 9f       	mul	r18, r22
 aa4:	11 24       	eor	r1, r1
 aa6:	30 19       	sub	r19, r0
 aa8:	30 5d       	subi	r19, 0xD0	; 208
 aaa:	31 93       	st	Z+, r19
 aac:	de f6       	brtc	.-74     	; 0xa64 <__ultoa_invert+0xe>
 aae:	cf 01       	movw	r24, r30
 ab0:	08 95       	ret
 ab2:	46 2f       	mov	r20, r22
 ab4:	47 70       	andi	r20, 0x07	; 7
 ab6:	40 5d       	subi	r20, 0xD0	; 208
 ab8:	41 93       	st	Z+, r20
 aba:	b3 e0       	ldi	r27, 0x03	; 3
 abc:	0f d0       	rcall	.+30     	; 0xadc <__ultoa_invert+0x86>
 abe:	c9 f7       	brne	.-14     	; 0xab2 <__ultoa_invert+0x5c>
 ac0:	f6 cf       	rjmp	.-20     	; 0xaae <__ultoa_invert+0x58>
 ac2:	46 2f       	mov	r20, r22
 ac4:	4f 70       	andi	r20, 0x0F	; 15
 ac6:	40 5d       	subi	r20, 0xD0	; 208
 ac8:	4a 33       	cpi	r20, 0x3A	; 58
 aca:	18 f0       	brcs	.+6      	; 0xad2 <__ultoa_invert+0x7c>
 acc:	49 5d       	subi	r20, 0xD9	; 217
 ace:	31 fd       	sbrc	r19, 1
 ad0:	40 52       	subi	r20, 0x20	; 32
 ad2:	41 93       	st	Z+, r20
 ad4:	02 d0       	rcall	.+4      	; 0xada <__ultoa_invert+0x84>
 ad6:	a9 f7       	brne	.-22     	; 0xac2 <__ultoa_invert+0x6c>
 ad8:	ea cf       	rjmp	.-44     	; 0xaae <__ultoa_invert+0x58>
 ada:	b4 e0       	ldi	r27, 0x04	; 4
 adc:	a6 95       	lsr	r26
 ade:	97 95       	ror	r25
 ae0:	87 95       	ror	r24
 ae2:	77 95       	ror	r23
 ae4:	67 95       	ror	r22
 ae6:	ba 95       	dec	r27
 ae8:	c9 f7       	brne	.-14     	; 0xadc <__ultoa_invert+0x86>
 aea:	00 97       	sbiw	r24, 0x00	; 0
 aec:	61 05       	cpc	r22, r1
 aee:	71 05       	cpc	r23, r1
 af0:	08 95       	ret
 af2:	9b 01       	movw	r18, r22
 af4:	ac 01       	movw	r20, r24
 af6:	0a 2e       	mov	r0, r26
 af8:	06 94       	lsr	r0
 afa:	57 95       	ror	r21
 afc:	47 95       	ror	r20
 afe:	37 95       	ror	r19
 b00:	27 95       	ror	r18
 b02:	ba 95       	dec	r27
 b04:	c9 f7       	brne	.-14     	; 0xaf8 <__ultoa_invert+0xa2>
 b06:	62 0f       	add	r22, r18
 b08:	73 1f       	adc	r23, r19
 b0a:	84 1f       	adc	r24, r20
 b0c:	95 1f       	adc	r25, r21
 b0e:	a0 1d       	adc	r26, r0
 b10:	08 95       	ret

00000b12 <__prologue_saves__>:
 b12:	2f 92       	push	r2
 b14:	3f 92       	push	r3
 b16:	4f 92       	push	r4
 b18:	5f 92       	push	r5
 b1a:	6f 92       	push	r6
 b1c:	7f 92       	push	r7
 b1e:	8f 92       	push	r8
 b20:	9f 92       	push	r9
 b22:	af 92       	push	r10
 b24:	bf 92       	push	r11
 b26:	cf 92       	push	r12
 b28:	df 92       	push	r13
 b2a:	ef 92       	push	r14
 b2c:	ff 92       	push	r15
 b2e:	0f 93       	push	r16
 b30:	1f 93       	push	r17
 b32:	cf 93       	push	r28
 b34:	df 93       	push	r29
 b36:	cd b7       	in	r28, 0x3d	; 61
 b38:	de b7       	in	r29, 0x3e	; 62
 b3a:	ca 1b       	sub	r28, r26
 b3c:	db 0b       	sbc	r29, r27
 b3e:	0f b6       	in	r0, 0x3f	; 63
 b40:	f8 94       	cli
 b42:	de bf       	out	0x3e, r29	; 62
 b44:	0f be       	out	0x3f, r0	; 63
 b46:	cd bf       	out	0x3d, r28	; 61
 b48:	09 94       	ijmp

00000b4a <__epilogue_restores__>:
 b4a:	2a 88       	ldd	r2, Y+18	; 0x12
 b4c:	39 88       	ldd	r3, Y+17	; 0x11
 b4e:	48 88       	ldd	r4, Y+16	; 0x10
 b50:	5f 84       	ldd	r5, Y+15	; 0x0f
 b52:	6e 84       	ldd	r6, Y+14	; 0x0e
 b54:	7d 84       	ldd	r7, Y+13	; 0x0d
 b56:	8c 84       	ldd	r8, Y+12	; 0x0c
 b58:	9b 84       	ldd	r9, Y+11	; 0x0b
 b5a:	aa 84       	ldd	r10, Y+10	; 0x0a
 b5c:	b9 84       	ldd	r11, Y+9	; 0x09
 b5e:	c8 84       	ldd	r12, Y+8	; 0x08
 b60:	df 80       	ldd	r13, Y+7	; 0x07
 b62:	ee 80       	ldd	r14, Y+6	; 0x06
 b64:	fd 80       	ldd	r15, Y+5	; 0x05
 b66:	0c 81       	ldd	r16, Y+4	; 0x04
 b68:	1b 81       	ldd	r17, Y+3	; 0x03
 b6a:	aa 81       	ldd	r26, Y+2	; 0x02
 b6c:	b9 81       	ldd	r27, Y+1	; 0x01
 b6e:	ce 0f       	add	r28, r30
 b70:	d1 1d       	adc	r29, r1
 b72:	0f b6       	in	r0, 0x3f	; 63
 b74:	f8 94       	cli
 b76:	de bf       	out	0x3e, r29	; 62
 b78:	0f be       	out	0x3f, r0	; 63
 b7a:	cd bf       	out	0x3d, r28	; 61
 b7c:	ed 01       	movw	r28, r26
 b7e:	08 95       	ret

00000b80 <_exit>:
 b80:	f8 94       	cli

00000b82 <__stop_program>:
 b82:	ff cf       	rjmp	.-2      	; 0xb82 <__stop_program>
